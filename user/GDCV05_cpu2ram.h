/*
 * GDCV05_cpu2ram.h
 *
 *  Created on: 2017年12月7日
 *      Author: wangpingan
 */

#ifndef USER_GDCV05_CPU2RAM_H_
#define USER_GDCV05_CPU2RAM_H_

typedef struct {
	bool ReadySwithOn:1; //1:已准备好接通电源
	bool SwithedOn:1; //1：电源已接通
	bool OperationEnabl:1; //1:运行使能
	bool Fault:1; //1:故障
	bool VoltageEnabl:1;//1：高电源使能
	bool QuickStop:1;//0:处于急停状态；1：不支持急停或急停功能没有运行
	bool SwitchOnDisabl:1;//0:处于不可接通电源状态；
	bool Warning:1;//1:发生报警；
	bool res0:1;//预留
	bool Remote:1;  //0:非远程模式   1：远程模式  EtherCAT为远程模式
	bool TargetReached:1;   //1:达到目标指令
	bool InternalLimitActive:1;  //1:超过内部限制而不能达到目标指令值
	bool res1:4;  //预留
}STATUSWORD_BITS;

typedef union {
	STATUSWORD_BITS bits;
	UINT16 all;
}STATUSWORD;

typedef struct {
	STATUSWORD StatusWord;//状态字
	UINT32 ModesOfOperationDisplay;//0x6061：伺服显示的运行模式，1：Profile 位置控制模式；2：速度控制模式 3：Profile 速度控制模式 4：Profile转矩控制模式  6：原点回归位置控制模式 7：补偿位置控制模式  8：同步周期位置模式 9：同步周期速度模式 10：同步周期转矩模式
	INT32 PositionActualValue;//主编码器实际位置
	INT32 VelocityActualValue;//反馈电动机当前实际转速
	UINT32 GDCIndex;//GDC参数索引头bit31/bit30 0 空心，1读，2写
	UINT32 GDCIndexValue;//GDC参数索引值
}GDC_R,*pGDC_R;
extern GDC_R  GDCV05_CPU2_R;

typedef struct {
	bool SwitchOn:1;   //0-1:接通电源；  1-0：切断电源
	bool EnableVoltage:1;   //0-1:使能供电 ；  1-0：停止供电
	bool QucikStop:1;  //1-0:紧急停止
	bool EnableOperation:1;  //0-1:使能运行；  1-0:停止运行
	bool res0:3;              //预留
	bool FaultRest:1;        //复位错误
	bool Halt:1;             //暂停
	bool res1:7;              //预留
}CONTROLWORD_BITS;

typedef union {
	CONTROLWORD_BITS bits;
	UINT16 all;
}CONTROLWORD;

typedef struct  {
	CONTROLWORD ControlWord;//x6040:控制字
	UINT16 ModesOfOperation;//x6060:运行模式1：Profile 位置控制模式；2：速度控制模式 3：Profile 速度控制模式 4：Profile转矩控制模式  6：原点回归位置控制模式 7：补偿位置控制模式  8：同步周期位置模式 9：同步周期速度模式 10：同步周期转矩模式
	UINT32 SetTarget;//相应运行模式下的目标值
	UINT32 GDCIndex;//bit0-bit15 GDC参数索引号，bit30/bit31 1 读，2写
	UINT32 GDCIndexValue;//写的值
	UINT32 CycleTime;//通讯周期
	UINT32 SyncType;//0:自由运行模式；2：SYNC0同步方式
	UINT32 DC2DCValue;//两个DC中断时间间隔
}GDC_WR,*pGDCWR;


extern GDC_WR GDCV05_CPU2_WR;
//

#endif /* USER_GDCV05_CPU2RAM_H_ */
